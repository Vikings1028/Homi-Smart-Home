{"version":3,"sources":["components/dashboard/dashboard-layout.jsx","components/Server.jsx","components/Refresh.jsx","components/dashboard/ParticleConnect.jsx","img/light-off.png","img/light-25.png","img/light-50.png","img/light-75.png","img/light-100.png","components/dashboard/SmartLight.jsx","components/dashboard/Thermostat.jsx","img/door-open.png","img/door-close.png","components/dashboard/Door.jsx","pages/Dashboard.jsx","components/common/Footer.jsx","img/PageNotFound.png","pages/PageNotFound.jsx","App.jsx","index.jsx"],"names":["DashboardLayoutRoot","styled","theme","display","flex","maxWidth","paddingTop","breakpoints","up","paddingLeft","DashboardLayout","props","children","Box","sx","flexDirection","width","ServerHost","RefreshRate","ParticleConnect","useState","portList","setPortList","portSel","setPortSel","btnColor","setBtnColor","btnLabel","setBtnLabel","ScanPorts","a","axios","post","cmd","response","status","data","list","device","localStorage","getItem","deviceInfo","JSON","parse","includes","port","ReadData","deviceReadings","temp","humidity","light","door","simclock","setItem","stringify","alert","useEffect","interval","setInterval","clearInterval","ConnectDevice","path","removeItem","id","FormControl","m","minWidth","InputLabel","Select","labelId","value","label","onChange","target","map","MenuItem","Button","color","variant","size","onClick","SmartLight","lightColor","setLightColor","lightValue","setLightValue","lightSensor","setLightSensor","bedtime","setBedtime","wakeup","setWakeup","UpdateParticle","smartlight","brightness","console","log","readings","className","src","LightOff","alt","Slider","defaultValue","step","valueLabelDisplay","marks","sliderRead","document","getElementById","Light25","Light50","Light75","Light100","LocalizationProvider","dateAdapter","AdapterDateFns","TimePicker","val","renderInput","params","TextField","thermostatInit","systemMode","fanMode","curTemp","Thermostat","thermostat","setThermostat","updateThermostat","key","prevThermo","InputProps","inputProps","min","max","onKeyDown","event","preventDefault","type","margin","Door","doorClosed","setDoorStatus","doorSensor","setDoorSensor","doorTimer","ClosedDoor","FormControlLabel","control","Switch","doorImg","OpenDoor","AdjustDoor","TimeDisplay","date","hours","getHours","minutes","getMinutes","ampm","strTime","Dashboard","time","setTime","simDate","Date","component","flexGrow","py","Container","Grid","container","spacing","item","xl","lg","sm","xs","height","getLayout","page","Footer","Card","NotFoundPage","PageNotFound","App","element","rootElement","ReactDOM","render"],"mappings":"qNAaMA,EAAsBC,YAAO,MAAPA,EAAc,gBAAGC,EAAH,EAAGA,MAAH,oBACxCC,QAAS,OACTC,KAAM,WACNC,SAAU,OACVC,WAAY,IACXJ,EAAMK,YAAYC,GAAG,MAAQ,CAC5BC,YAAa,SAIJC,EAAkB,SAACC,GAC9B,IAAQC,EAAaD,EAAbC,SAER,OACE,mCACE,cAACZ,EAAD,UACE,cAACa,EAAA,EAAD,CACEC,GAAI,CACFX,QAAS,OACTC,KAAM,WACNW,cAAe,SACfC,MAAO,QALX,SAQGJ,S,uFCzBIK,EAFI,wBCGJC,EAFK,ICiJLC,G,YApIS,WAEpB,MAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAgCJ,mBAAS,WAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACA,EAAgCN,mBAAS,WAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KAEMC,EAAS,uCAAG,gCAAAC,EAAA,sEACSC,IAAMC,KACzBf,EAAa,eACb,CAAEgB,IAAK,SAHG,OAMU,OALlBC,EADQ,QAMDC,SAETb,EAAYY,EAASE,KAAKC,OAEpBC,EAASC,aAAaC,QAAQ,aAE1BC,EAAaC,KAAKC,MAAML,GAC1BJ,EAASE,KAAKC,KAAKO,SAASH,EAAWI,QACvCjB,EAAY,cACZF,EAAY,SACZF,EAAWiB,EAAWI,SAhBpB,2CAAH,qDAsBTC,EAAQ,uCAAG,8BAAAhB,EAAA,sEACUC,IAAMC,KACzBf,EAAa,eACb,CAAEgB,IAAK,SAHE,OAMW,OALlBC,EADO,QAMAC,QACHY,EAAiB,CACnBC,KAAWd,EAASE,KAAKA,KAAKY,KAC9BC,SAAWf,EAASE,KAAKA,KAAKa,SAC9BC,MAAWhB,EAASE,KAAKA,KAAKc,MAC9BC,KAAWjB,EAASE,KAAKA,KAAKe,KAC9BC,SAAWlB,EAASE,KAAKA,KAAKgB,UAElCb,aAAac,QAAQ,iBAAkBX,KAAKY,UAAUP,KAEtDQ,MAAM,uBAhBG,2CAAH,qDAoBdC,qBAAU,WACN3B,IAEA,IAAM4B,EAAWC,aAAY,WACVnB,aAAaC,QAAQ,WAEhCM,MAEL5B,GACH,OAAO,kBAAMyC,cAAcF,MAC5B,IAEH,IAAMG,EAAa,uCAAG,4BAAA9B,EAAA,yDACD,YAAbH,EADc,oBAGE,KAAZJ,EAHU,uBAIVgC,MAAM,wBAJI,0CAQSxB,IAAMC,KACzBf,EAAa,eACb,CAAEgB,IAAK,OAAQ4B,KAAMtC,IAVX,OAaU,OALlBW,EARQ,QAaDC,QACTP,EAAY,cACZF,EAAY,SACZa,aAAac,QAAQ,SAAUX,KAAKY,UAAU,CAAC,KAAQ/B,MAC5B,MAApBW,EAASC,OAChBoB,MAAM,oCAENA,MAAM,iDApBI,yCAuBSxB,IAAMC,KACzBf,EAAa,gBACb,CAAEgB,IAAK,UAzBG,QA4BU,MA5BV,OA4BDE,QACTP,EAAY,WACZF,EAAY,WACZa,aAAauB,WAAW,kBACxBvB,aAAauB,WAAW,WAExBP,MAAM,wBAlCI,4CAAH,qDAuCnB,OACI,sBAAKQ,GAAG,gBAAR,UACI,eAACC,EAAA,EAAD,CAAalD,GAAI,CAAEmD,EAAG,EAAGC,SAAU,KAAnC,UACI,cAACC,EAAA,EAAD,CAAYJ,GAAG,kCAAf,8BACA,cAACK,EAAA,EAAD,CACIC,QAAQ,kCACRN,GAAG,4BACHO,MAAO/C,EACPgD,MAAM,mBACNC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBjD,EAAWiD,EAAOH,QALhD,gBAOSjD,QAPT,IAOSA,OAPT,EAOSA,EAAUqD,KAAI,SAAA7B,GACX,OACI,cAAC8B,EAAA,EAAD,CAAqBL,MAAOzB,EAA5B,SACKA,GADUA,WAOnC,cAAC+B,EAAA,EAAD,CACI9D,GAAI,CAAEmD,EAAG,GACTY,MAAOpD,EACPqD,QAAQ,YACRC,KAAK,QACLC,QAASpB,EALb,SAMKjC,S,8DCtJF,MAA0B,sCCA1B,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,sCC4J1BsD,EA7HI,WACf,MAAoC7D,mBAAS,WAA7C,mBAAO8D,EAAP,KAAmBC,EAAnB,KACA,EAAoC/D,mBAAS,GAA7C,mBAAOgE,EAAP,KAAmBC,EAAnB,KACA,EAAsCjE,mBAAS,GAA/C,mBAAOkE,EAAP,KAAoBC,EAApB,KACA,EAA8BnE,mBAAS,MAAvC,mBAAOoE,EAAP,KAAgBC,EAAhB,KACA,EAA4BrE,mBAAS,MAArC,mBAAOsE,EAAP,KAAeC,EAAf,KAiBMC,EAAc,uCAAG,4BAAA9D,EAAA,6DAEbM,EAAO,CACTyD,WAAY,CACRC,WAAYV,IAJD,SAQIrD,IAAMC,KACzBf,EAAa,gBACbmB,GAVe,UAaK,MAbL,OAaND,OAbM,iDAgBf4D,QAAQC,IAAI,4BAhBG,2CAAH,qDAmDpB,OAXAxC,qBAAU,WACN,IAAMC,EAAWC,aAAY,WACzB,IAAMX,EAAiBR,aAAaC,QAAQ,kBAC5C,GAAIO,EAAgB,CAChB,IAAMkD,EAAWvD,KAAKC,MAAMI,GAC5BwC,EAAeU,EAAS/C,UAE7BhC,GACH,OAAO,kBAAMyC,cAAcF,MAC5B,IAGC,qBAAKyC,UAAU,cAAf,SACI,sBAAKnC,GAAG,WAAR,UACI,+CACA,gDAAmBuB,EAAnB,OAEA,qBAAKvB,GAAG,YAAYoC,IAAKC,EAAUC,IAAI,cAEvC,cAACC,EAAA,EAAD,CACE,aAAW,eACXC,aAAc,EACdC,KAAM,EACNC,kBAAkB,OAClBC,MA/EK,CACf,CACIpC,MAAO,EACPC,MAAO,MAEX,CACID,MAAO,GACPC,MAAO,OAEX,CACID,MAAO,IACPC,MAAO,SAqEDC,SAAU,gBA7CHmC,EA6CMlC,EAAH,EAAGA,OAAH,OA7CHkC,EA6C+BlC,EAAOH,MA5CvDe,EAAcsB,GAECC,SAASC,eAAe,aAG1BV,IADM,IAAff,EACegB,EACRhB,EAAa,GACL0B,EACR1B,EAAa,GACL2B,EACR3B,EAAa,GACL4B,EAEAC,OAGnBrB,OA+BQ,cAAC,IAAD,CACI7B,GAAG,WACHc,MAAOK,EACPV,SAAUW,IAEd,sBAAKpB,GAAG,mBAAR,UACI,qBAAKmC,UAAU,UAAf,SACI,cAACgB,EAAA,EAAD,CAAsBC,YAAaC,IAAnC,SACE,cAACC,EAAA,EAAD,CACEnB,UAAU,kBACV3B,MAAM,UACND,MAAOkB,EACPhB,SAAU,SAAC8C,GAAS7B,EAAW6B,IAC/BC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,eAAeD,WAKhD,qBAAKtB,UAAU,UAAf,SACI,cAACgB,EAAA,EAAD,CAAsBC,YAAaC,IAAnC,SACE,cAACC,EAAA,EAAD,CACEnB,UAAU,kBACV3B,MAAM,UACND,MAAOoB,EACPlB,SAAU,SAAC8C,GAAS3B,EAAU2B,IAC9BC,YAAa,SAACC,GAAD,OAAY,cAACC,EAAA,EAAD,eAAeD,oBC5H9DE,EAAiB,CACnBC,WAAa,MACbC,QAAa,OACb5E,KAAa,GACb6E,QAAa,KACb5E,SAAa,KACbd,OAAa,OAkGF2F,EA/FI,WAEf,MAAoC1G,mBAASsG,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KAEMC,EAAmB,SAACC,EAAK5D,GAC3B0D,GAAc,SAAAG,GAAU,kCACjBA,GADiB,kBAEnBD,EAAM5D,QAyBf,OArBAd,qBAAU,WACN,IAAMC,EAAWC,aAAY,WACzB,IAAMX,EAAiBR,aAAaC,QAAQ,kBAC5C,GAAIO,EAAgB,CAChB,IAAMkD,EAAWvD,KAAKC,MAAMI,GACvB,SAAUkD,GAAc,aAAcA,IACvCgC,EAAiB,UAAWhC,EAASjD,MACrCiF,EAAiB,WAAYhC,EAAShD,UAEjCgD,EAASjD,KAAO+E,EAAW/E,MAAiC,QAAzB+E,EAAWJ,YAC9C1B,EAASjD,KAAO+E,EAAW/E,MAAiC,QAAzB+E,EAAWJ,WAC/CM,EAAiB,SAAU,MAE3BA,EAAiB,SAAU,WAIxC/G,GACH,OAAO,kBAAMyC,cAAcF,MAC5B,IAGC,qBAAKyC,UAAU,cAAf,SACI,sBAAKnC,GAAG,UAAR,UACI,8CAEA,sBAAKA,GAAG,kBAAR,UACI,oBAAGA,GAAG,UAAN,UAAiBgE,EAAWF,QAA5B,WACA,oBAAG9D,GAAG,SAAN,uBAA0BgE,EAAW9E,SAArC,OACA,oBAAGc,GAAG,SAAN,qBAAwBgE,EAAW5F,aAGvC,eAAC6B,EAAA,EAAD,CAAalD,GAAI,CAAEmD,EAAG,EAAGC,SAAU,KAAnC,UACI,cAACC,EAAA,EAAD,CAAYJ,GAAG,kCAAf,yBACA,eAACK,EAAA,EAAD,CACIC,QAAQ,kCACRN,GAAG,4BACHO,MAAOyD,EAAWJ,WAClBpD,MAAM,cACNC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBwD,EAAiB,aAAcxD,EAAOH,QALpE,UAOI,cAACK,EAAA,EAAD,CAAUL,MAAO,MAAjB,iBACA,cAACK,EAAA,EAAD,CAAUL,MAAO,OAAjB,kBACA,cAACK,EAAA,EAAD,CAAUL,MAAO,OAAjB,wBAIR,eAACN,EAAA,EAAD,CAAalD,GAAI,CAAEmD,EAAG,EAAGC,SAAU,KAAnC,UACI,cAACC,EAAA,EAAD,CAAYJ,GAAG,kCAAf,sBACA,eAACK,EAAA,EAAD,CACIC,QAAQ,kCACRN,GAAG,4BACHO,MAAOyD,EAAWH,QAClBrD,MAAM,WACNC,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBwD,EAAiB,UAAWxD,EAAOH,QALjE,UAOI,cAACK,EAAA,EAAD,CAAUL,MAAO,KAAjB,gBACA,cAACK,EAAA,EAAD,CAAUL,MAAO,OAAjB,wBAIR,8BACI,cAACmD,EAAA,EAAD,CACI1D,GAAG,YACHQ,MAAM,cACND,MAAOyD,EAAW/E,KAClBoF,WAAY,CAAEC,WAAY,CACtBC,IAAK,GACLC,IAAK,GACLC,UAAW,SAACC,GACRA,EAAMC,oBAGdC,KAAK,SACLnE,SAAU,gBAAGC,EAAH,EAAGA,OAAH,OAAgBwD,EAAiB,OAAQxD,EAAOH,QAC1DsE,OAAO,mB,kBCrHhB,MAA0B,sCCA1B,MAA0B,uCCoF1BC,EA/DF,WAET,MAAoCzH,oBAAS,GAA7C,mBAAO0H,EAAP,KAAmBC,EAAnB,KACA,EAAoC3H,mBAAS,GAA7C,mBAAO4H,EAAP,KAAmBC,EAAnB,KAuCA,OAvBAzF,qBAAU,WACN,IAAMC,EAAWC,aAAY,WACzB,IAAMX,EAAiBR,aAAaC,QAAQ,kBAC5C,GAAIO,EAAgB,CAChB,IAAMkD,EAAWvD,KAAKC,MAAMI,GAC5BkG,EAAchD,EAAS9C,MAG3B,IAAM+F,EAAY3G,aAAaC,QAAQ,QACnC0G,IACkB,MAAdA,EACA3G,aAAac,QAAQ,OAAQ,KACR,MAAd6F,EACP3G,aAAac,QAAQ,OAAQ,KACR,MAAd6F,IACP3F,MAAM,0BACNhB,aAAac,QAAQ,OAAQ,SAGtCnC,GACH,OAAO,kBAAMyC,cAAcF,MAC5B,IAGC,qBAAKyC,UAAU,cAAf,SACI,sBAAKnC,GAAG,UAAR,UACI,wCACA,+CAAkBiF,EAAlB,OAEA,qBAAKjF,GAAG,OAAOoC,IAAKgD,EAAY9C,IAAI,SAEpC,cAAC+C,EAAA,EAAD,CACIrF,GAAG,YACHsF,QAAS,cAACC,EAAA,EAAD,IACT/E,MAAM,GACND,MAAOwE,EACPtE,SAAU,kBAlDP,WACf,IAAM+E,EAAU3C,SAASC,eAAe,QAEnCiC,GAIDvG,aAAauB,WAAW,QACxByF,EAAQpD,IAAMgD,IAJd5G,aAAac,QAAQ,OAAQ,KAC7BkG,EAAQpD,IAAMqD,GAMlBT,GAAeD,GAuCaW,YCpD9BC,EAAc,SAAC/I,GACjB,GAAmB,UAAfA,EAAMgJ,KACN,OAAS,mBAAG5F,GAAG,WAAN,SAAkB,UAE/B,IAAI6F,EAAQjJ,EAAMgJ,KAAKE,WACnBC,EAAUnJ,EAAMgJ,KAAKI,aACrBC,EAAOJ,GAAS,GAAK,KAAO,KAI5BK,GAFJL,GADAA,GAAgB,KACQ,IAEF,KADtBE,EAAUA,EAAU,GAAK,IAAIA,EAAUA,GACD,IAAME,EAC5C,OAAS,mBAAGjG,GAAG,WAAN,SAAkBkG,KAGzBC,EAAY,WACd,MAAwB9I,mBAAS,SAAjC,mBAAO+I,EAAP,KAAaC,EAAb,KAcA,OAZA5G,qBAAU,WACN,IAAMC,EAAWC,aAAY,WACzB,IAAMX,EAAiBR,aAAaC,QAAQ,kBAC5C,GAAIO,EAAgB,CAChB,IAAMkD,EAAWvD,KAAKC,MAAMI,GACtBsH,EAAU,IAAIC,KAAKrE,EAAS7C,UAClCgH,EAAQC,MAEbnJ,GACH,OAAO,kBAAMyC,cAAcF,MAC5B,IAGC,sBAAKM,GAAG,gBAAR,UACI,cAAC,EAAD,CAAa4F,KAAMQ,IAEnB,cAAC,EAAD,IAEA,cAACtJ,EAAA,EAAD,CAAK0J,UAAU,OAAOxG,GAAG,eAAejD,GAAI,CAAE0J,SAAU,EAAGC,GAAI,GAA/D,SACI,cAACC,EAAA,EAAD,CAAWrK,UAAU,EAArB,SACI,eAACsK,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,UACI,cAACF,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAApC,SACI,cAAC,EAAD,MAGJ,cAACP,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAApC,SACI,cAAC,EAAD,CAAYpK,GAAI,CAAEqK,OAAQ,YAG9B,cAACR,EAAA,EAAD,CAAMG,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,GAAI,GAApC,SACI,cAAC,EAAD,iBAS5BhB,EAAUkB,UAAY,SAACC,GAAD,OAClB,cAAC,EAAD,UACKA,KAIMnB,Q,SC9DAoB,GAVA,WACX,OACI,qBAAKpF,UAAU,YAAf,SACI,cAACqF,EAAA,EAAKD,OAAN,UACI,uBAAOpF,UAAU,aAAjB,sCClBD,OAA0B,yCCwB1BsF,GATM,WACjB,OACI,qBAAKtF,UAAU,kBAAf,SACE,qBAAKA,UAAU,kBAAkBC,IAAKsF,GAChCpF,IAAI,sBCeLqF,GAfH,WACR,OACI,qBAAKxF,UAAU,UAAf,SACI,eAAC,IAAD,WACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAOrC,KAAK,IAAY8H,QAAS,cAAC,EAAD,MACjC,cAAC,IAAD,CAAO9H,KAAK,YAAY8H,QAAS,cAAC,EAAD,MACjC,cAAC,IAAD,CAAO9H,KAAK,IAAY8H,QAAS,cAAC,GAAD,SAEzC,cAAC,GAAD,UCXNC,GAAchF,SAASC,eAAe,QAE5CgF,IAASC,OACD,cAAC,GAAD,IACJF,K","file":"static/js/main.f5c088ff.chunk.js","sourcesContent":["/**\n * Creates the dashboard layout\n *\n * @file      dashboard-layout.jsx.\n * @author    Martin Lopez, Diego Moscoso, Jacob Summerville.\n * @since     11/29/2021\n * @copyright Martin Lopez, Diego Moscoso, Jacob Summerville 2021\n */\n\nimport React from 'react';\nimport { Box } from '@mui/material';\nimport { styled } from '@mui/material/styles';\n\nconst DashboardLayoutRoot = styled('div')(({ theme }) => ({\n  display: 'flex',\n  flex: '1 1 auto',\n  maxWidth: '100%',\n  paddingTop: 64,\n  [theme.breakpoints.up('lg')]: {\n    paddingLeft: 280\n  }\n}));\n\nexport const DashboardLayout = (props) => {\n  const { children } = props;\n\n  return (\n    <>\n      <DashboardLayoutRoot>\n        <Box\n          sx={{\n            display: 'flex',\n            flex: '1 1 auto',\n            flexDirection: 'column',\n            width: '100%'\n          }}\n        >\n          {children}\n        </Box>\n      </DashboardLayoutRoot>\n    </>\n  );\n};\n","/**\n * Contains the path to the current Node.js server\n *\n * @file      Server.jsx.\n * @author    Martin Lopez, Diego Moscoso, Jacob Summerville.\n * @since     11/29/2021\n * @copyright Martin Lopez, Diego Moscoso, Jacob Summerville 2021\n */\n\nconst ServerPort = '3000';\nconst ServerHost = 'http://localhost:' + ServerPort;\n\nexport default ServerHost;","/**\n * Contains the desired refresh rate of the data grabs\n *\n * @file      Refresh.jsx.\n * @author    Martin Lopez, Diego Moscoso, Jacob Summerville.\n * @since     11/29/2021\n * @copyright Martin Lopez, Diego Moscoso, Jacob Summerville 2021\n */\n\nconst SECONDS = 1000;\n\nconst RefreshRate = 1  * SECONDS;\n\nexport default RefreshRate;","/**\n * Contain all the Particle connection requests and data \n * population\n *\n * @file      ParticleConnect.jsx.\n * @author    Martin Lopez, Diego Moscoso, Jacob Summerville.\n * @since     11/29/2021\n * @copyright Martin Lopez, Diego Moscoso, Jacob Summerville 2021\n */\n\nimport axios from 'axios';\nimport React, { useState, useEffect } from \"react\";\nimport Button from '@mui/material/Button';\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\n\nimport ServerHost from './../Server.jsx'\nimport RefreshRate from './../Refresh.jsx'\n\nimport \"./../../styles/theme.css\";\nimport \"./../../styles/dashboard.css\";\n\nconst ParticleConnect = () => {\n\n    const [portList, setPortList] = useState([]);\n    const [portSel,  setPortSel]  = useState('');\n    const [btnColor, setBtnColor] = useState('success');\n    const [btnLabel, setBtnLabel] = useState('Connect');\n\n    const ScanPorts = async () => {\n        const response = await axios.post(\n            ServerHost + \"/serial/scan\",\n            { cmd: \"scan\" }\n        );\n\n        if (response.status === 201) {\n\n            setPortList(response.data.list);\n\n            const device = localStorage.getItem('Device');\n            if (device) {\n                const deviceInfo = JSON.parse(device);\n                if (response.data.list.includes(deviceInfo.port)) {\n                    setBtnLabel('Disconnect');\n                    setBtnColor('error');\n                    setPortSel(deviceInfo.port);\n                }\n            } \n        }\n    }\n\n    const ReadData = async () => { \n        const response = await axios.post(\n            ServerHost + \"/serial/read\",\n            { cmd: \"read\" }\n        );\n\n        if (response.status === 201) {\n            const deviceReadings = {\n                temp     : response.data.data.temp,\n                humidity : response.data.data.humidity,\n                light    : response.data.data.light,\n                door     : response.data.data.door,\n                simclock : response.data.data.simclock\n            }\n            localStorage.setItem('DeviceReadings', JSON.stringify(deviceReadings));\n        } else {\n            alert('Unable to read data');\n        }\n    }\n\n    useEffect(() => {\n        ScanPorts();\n\n        const interval = setInterval(() => {\n            const device = localStorage.getItem('Device');\n            if (device) {\n                ReadData();\n            }\n        }, RefreshRate);\n        return () => clearInterval(interval);\n    }, []);\n\n    const ConnectDevice = async () => {\n        if (btnLabel === 'Connect') {\n\n            if (portSel === '') {\n                alert('Please select a port');\n                return;\n            }\n\n            const response = await axios.post(\n                ServerHost + \"/serial/open\",\n                { cmd: \"open\", path: portSel }\n            );\n\n            if (response.status === 200) {\n                setBtnLabel('Disconnect');\n                setBtnColor('error');\n                localStorage.setItem('Device', JSON.stringify({'port': portSel}));\n            } else if (response.status === 201){\n                alert('Unable to connect! Resource busy');\n            } else {\n                alert('Unable to connect! There was an unknown error');\n            }\n        } else {\n            const response = await axios.post(\n                ServerHost + \"/serial/close\",\n                { cmd: \"close\" }\n            );\n\n            if (response.status === 201) {\n                setBtnLabel('Connect');\n                setBtnColor('success');\n                localStorage.removeItem('DeviceReadings');\n                localStorage.removeItem('Device');\n            } else {\n                alert('Unable to disconnect');\n            }\n        }\n    }\n\n    return (\n        <div id=\"deviceConnect\">\n            <FormControl sx={{ m: 1, minWidth: 250 }}>\n                <InputLabel id=\"demo-simple-select-helper-label\">Select your port</InputLabel>\n                <Select\n                    labelId=\"demo-simple-select-helper-label\"\n                    id=\"demo-simple-select-helper\"\n                    value={portSel}\n                    label=\"Select your port\"\n                    onChange={({ target }) => setPortSel(target.value)}\n                    >\n                        {portList?.map(port => {\n                            return (\n                                <MenuItem key={port} value={port}>\n                                    {port ?? port}\n                                </MenuItem>\n                            );\n                        })}\n                </Select>\n            </FormControl>\n            <Button \n                sx={{ m: 2 }}\n                color={btnColor}\n                variant=\"contained\" \n                size=\"small\"\n                onClick={ConnectDevice}>\n                {btnLabel}\n            </Button>\n        </div>\n    );\n}\n\nexport default ParticleConnect;\n","export default __webpack_public_path__ + \"static/media/light-off.0bfc97f5.png\";","export default __webpack_public_path__ + \"static/media/light-25.019573ec.png\";","export default __webpack_public_path__ + \"static/media/light-50.a72ac995.png\";","export default __webpack_public_path__ + \"static/media/light-75.cdbb79cc.png\";","export default __webpack_public_path__ + \"static/media/light-100.27180d32.png\";","/**\n * Controls the smart light\n *\n * @file      SmartLight.jsx.\n * @author    Martin Lopez, Diego Moscoso, Jacob Summerville.\n * @since     11/29/2021\n * @copyright Martin Lopez, Diego Moscoso, Jacob Summerville 2021\n */\n\nimport axios from 'axios';\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport Slider from '@mui/material/Slider';\nimport { HexColorPicker } from \"react-colorful\";\nimport TextField from '@mui/material/TextField';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport LocalizationProvider from '@mui/lab/LocalizationProvider';\nimport TimePicker from '@mui/lab/TimePicker';\n\nimport ServerHost from './../Server.jsx'\nimport RefreshRate from './../Refresh.jsx'\n\nimport \"./../../styles/theme.css\";\nimport \"./../../styles/dashboard.css\";\n\nimport LightOff from \"./../../img/light-off.png\"\nimport Light25 from \"./../../img/light-25.png\"\nimport Light50 from \"./../../img/light-50.png\"\nimport Light75 from \"./../../img/light-75.png\"\nimport Light100 from \"./../../img/light-100.png\"\n\nconst SmartLight = () => {\n    const [lightColor, setLightColor] = useState(\"#aabbcc\");\n    const [lightValue, setLightValue] = useState(0);\n    const [lightSensor, setLightSensor] = useState(0);\n    const [bedtime, setBedtime] = useState(null);\n    const [wakeup, setWakeup] = useState(null);\n\n    const lightMarks = [\n        {\n            value: 0,\n            label: '0%',\n        },\n        {\n            value: 50,\n            label: '50%',\n        },\n        {\n            value: 100,\n            label: '100%',\n        }\n    ];\n\n    const UpdateParticle = async () => {\n\n        const data = {\n            smartlight: {\n                brightness: lightValue\n            }\n        }\n\n        const response = await axios.post(\n            ServerHost + \"/serial/write\", \n            data\n        );\n\n        if (response.status === 201) {\n            return;\n        } else {\n            console.log('Error while writing data');\n        }\n    }\n\n    const AdjustLight = (sliderRead) => {\n        setLightValue(sliderRead);\n\n        var lightImg = document.getElementById('lightbulb');\n\n        if (lightValue === 0) {\n            lightImg.src = LightOff;\n        } else if (lightValue < 25) {\n            lightImg.src = Light25;\n        } else if (lightValue < 50) {\n            lightImg.src = Light50;\n        } else if (lightValue < 75) {\n            lightImg.src = Light75;\n        } else {\n            lightImg.src = Light100;\n        }\n\n        UpdateParticle();\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            const deviceReadings = localStorage.getItem('DeviceReadings');\n            if (deviceReadings) {\n                const readings = JSON.parse(deviceReadings);\n                setLightSensor(readings.light);\n            }\n        }, RefreshRate);\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div className=\"dashCompDiv\">\n            <div id=\"lightDiv\">\n                <h5> Smart Light </h5>\n                <p> Light Sensor: {lightSensor} </p>\n\n                <img id=\"lightbulb\" src={LightOff} alt=\"lightbulb\"/>\n\n                <Slider\n                  aria-label=\"Custom marks\"\n                  defaultValue={0}\n                  step={1}\n                  valueLabelDisplay=\"auto\"\n                  marks={lightMarks}\n                  onChange={({ target }) => AdjustLight(target.value)}\n                />\n\n                <HexColorPicker \n                    id=\"colorSel\"\n                    color={lightColor} \n                    onChange={setLightColor}/>\n\n                <div id=\"lightScheduleDiv\">\n                    <div className=\"timeSel\">\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                          <TimePicker\n                            className=\"lightTimePicker\"\n                            label=\"Bedtime\"\n                            value={bedtime}\n                            onChange={(val) => {setBedtime(val)}}\n                            renderInput={(params) => <TextField {...params} />}\n                          />\n                        </LocalizationProvider>\n                    </div>\n\n                    <div className=\"timeSel\">\n                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                          <TimePicker\n                            className=\"lightTimePicker\"\n                            label=\"Wake-up\"\n                            value={wakeup}\n                            onChange={(val) => {setWakeup(val)}}\n                            renderInput={(params) => <TextField {...params} />}\n                          />\n                        </LocalizationProvider>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default SmartLight;\n","/**\n * Controls the smart thermostat\n *\n * @file      Thermostat.jsx.\n * @author    Martin Lopez, Diego Moscoso, Jacob Summerville.\n * @since     11/29/2021\n * @copyright Martin Lopez, Diego Moscoso, Jacob Summerville 2021\n */\n\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport Select from '@mui/material/Select';\nimport MenuItem from '@mui/material/MenuItem';\nimport TextField from '@mui/material/TextField';\nimport InputLabel from '@mui/material/InputLabel';\nimport FormControl from '@mui/material/FormControl';\n\nimport RefreshRate from './../Refresh.jsx'\n\nimport \"./../../styles/theme.css\";\nimport \"./../../styles/dashboard.css\";\n\nconst thermostatInit = {\n    systemMode : 'off',\n    fanMode    : 'auto',\n    temp       : 76, \n    curTemp    : '--',\n    humidity   : '--',\n    status     : 'off'\n}\n\nconst Thermostat = () => {\n\n    const [thermostat, setThermostat] = useState(thermostatInit);\n\n    const updateThermostat = (key, value) => {\n        setThermostat(prevThermo => ({\n            ...prevThermo,\n            [key]: value\n        }));\n    };\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            const deviceReadings = localStorage.getItem('DeviceReadings');\n            if (deviceReadings) {\n                const readings = JSON.parse(deviceReadings);\n                if (('temp' in readings) && ('humidity' in readings)) {\n                    updateThermostat('curTemp', readings.temp);\n                    updateThermostat('humidity', readings.humidity);\n\n                    if ((readings.temp < thermostat.temp && thermostat.systemMode == 'heat') || \n                        (readings.temp > thermostat.temp && thermostat.systemMode == 'cool')) {\n                        updateThermostat('status', 'on');\n                    } else {\n                        updateThermostat('status', 'off');\n                    }\n                } \n            }\n        }, RefreshRate);\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div className=\"dashCompDiv\">\n            <div id=\"tempDiv\">\n                <h5> Thermostat </h5>\n        \n                <div id=\"currentTempData\">\n                    <p id=\"curTemp\">{thermostat.curTemp}°F</p>\n                    <p id=\"curHum\">Humidity: {thermostat.humidity}%</p>\n                    <p id=\"curHum\">Status: {thermostat.status}</p>\n                </div>\n\n                <FormControl sx={{ m: 1, minWidth: 150 }}>\n                    <InputLabel id=\"demo-simple-select-helper-label\">System Mode</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-helper-label\"\n                        id=\"demo-simple-select-helper\"\n                        value={thermostat.systemMode}\n                        label=\"System Mode\"\n                        onChange={({ target }) => updateThermostat('systemMode', target.value)}\n                        >\n                        <MenuItem value={'off'}>Off</MenuItem>\n                        <MenuItem value={'cool'}>Cool</MenuItem>\n                        <MenuItem value={'heat'}>Heat</MenuItem>\n                      </Select>\n                </FormControl>\n\n                <FormControl sx={{ m: 1, minWidth: 120 }}>\n                    <InputLabel id=\"demo-simple-select-helper-label\">Fan Mode</InputLabel>\n                    <Select\n                        labelId=\"demo-simple-select-helper-label\"\n                        id=\"demo-simple-select-helper\"\n                        value={thermostat.fanMode}\n                        label=\"Fan Mode\"\n                        onChange={({ target }) => updateThermostat('fanMode', target.value)}\n                        >\n                        <MenuItem value={'on'}>On</MenuItem>\n                        <MenuItem value={'auto'}>Auto</MenuItem>\n                      </Select>\n                </FormControl>\n\n                <div>\n                    <TextField\n                        id=\"tempEntry\" \n                        label=\"Temperature\"\n                        value={thermostat.temp}\n                        InputProps={{ inputProps: { \n                            min: 68, \n                            max: 86, \n                            onKeyDown: (event) => { // disable typing\n                                event.preventDefault();\n                            }\n                        }}}\n                        type=\"number\"\n                        onChange={({ target }) => updateThermostat('temp', target.value)}\n                        margin=\"normal\"\n                    />\n                </div>\n\n            </div>\n        </div>\n    );\n}\n\nexport default Thermostat;\n","export default __webpack_public_path__ + \"static/media/door-open.45adcec7.png\";","export default __webpack_public_path__ + \"static/media/door-close.16f02461.png\";","/**\n * Controls the smart door\n *\n * @file      Door.jsx.\n * @author    Martin Lopez, Diego Moscoso, Jacob Summerville.\n * @since     11/29/2021\n * @copyright Martin Lopez, Diego Moscoso, Jacob Summerville 2021\n */\n\nimport React from 'react';\nimport { useState, useEffect } from \"react\";\nimport FormControlLabel from '@mui/material/FormControlLabel';\nimport Switch from '@mui/material/Switch';\nimport OpenDoor from \"./../../img/door-open.png\"\nimport ClosedDoor from \"./../../img/door-close.png\";\n\nimport RefreshRate from './../Refresh.jsx'\n\nimport \"./../../styles/theme.css\";\nimport \"./../../styles/dashboard.css\";\n\nconst Door = () => {\n\n    const [doorClosed, setDoorStatus] = useState(false);\n    const [doorSensor, setDoorSensor] = useState(0);\n\n    const AdjustDoor = () => {\n        const doorImg = document.getElementById('door');\n\n        if (!doorClosed) {\n            localStorage.setItem('Door', '0');\n            doorImg.src = OpenDoor;\n        } else{\n            localStorage.removeItem('Door');\n            doorImg.src = ClosedDoor;\n        }\n        \n        setDoorStatus(!doorClosed);\n    }\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            const deviceReadings = localStorage.getItem('DeviceReadings');\n            if (deviceReadings) {\n                const readings = JSON.parse(deviceReadings);\n                setDoorSensor(readings.door);\n            }\n\n            const doorTimer = localStorage.getItem('Door');\n            if (doorTimer) {\n                if (doorTimer === '0') {\n                    localStorage.setItem('Door', '1');\n                } else if (doorTimer === '1') {\n                    localStorage.setItem('Door', '2');\n                } else if (doorTimer === '2') {\n                    alert('The door is still open');\n                    localStorage.setItem('Door', '0');\n                }\n            }\n        }, RefreshRate);\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div className=\"dashCompDiv\">\n            <div id=\"doorDiv\">\n                <h5> Door </h5>\n                <p> Door Sensor: {doorSensor} </p>\n\n                <img id=\"door\" src={ClosedDoor} alt=\"door\"/>\n\n                <FormControlLabel \n                    id=\"doorLabel\"\n                    control={<Switch/>} \n                    label=''\n                    value={doorClosed}\n                    onChange={() => AdjustDoor()}\n                />\n                \n            </div>\n        </div>\n    );\n}\n\nexport default Door;\n","/**\n * Display the dashboard to control and view all of the \n * available smart home devices\n *\n * @file      Dashboard.jsx.\n * @author    Martin Lopez, Diego Moscoso, Jacob Summerville.\n * @since     11/29/2021\n * @copyright Martin Lopez, Diego Moscoso, Jacob Summerville 2021\n */\n\nimport React, { useState, useEffect } from \"react\";\nimport { Box, Container, Grid } from '@mui/material';\n\nimport { DashboardLayout } from './../components/dashboard/dashboard-layout.jsx';\nimport ParticleConnect from './../components/dashboard/ParticleConnect.jsx';\nimport SmartLight      from './../components/dashboard/SmartLight.jsx';\nimport Thermostat      from './../components/dashboard/Thermostat.jsx';\nimport Door            from './../components/dashboard/Door.jsx';\n\nimport RefreshRate from './../components/Refresh.jsx'\n\nimport \"./../styles/theme.css\";\nimport \"./../styles/dashboard.css\";\n\nconst TimeDisplay = (props) => {\n    if (props.date === '00:00') {\n        return ( <p id=\"timeDisp\">{'00:00'}</p> );\n    }\n    var hours = props.date.getHours();\n    var minutes = props.date.getMinutes();\n    var ampm = hours >= 12 ? 'PM' : 'AM';\n    hours = hours % 12;\n    hours = hours ? hours : 12; // the hour '0' should be '12'\n    minutes = minutes < 10 ? '0'+minutes : minutes;\n    var strTime = hours + ':' + minutes + ' ' + ampm;\n    return ( <p id=\"timeDisp\">{strTime}</p> );\n}\n\nconst Dashboard = () => {\n    const [time, setTime] = useState('00:00');\n\n    useEffect(() => {\n        const interval = setInterval(() => {\n            const deviceReadings = localStorage.getItem('DeviceReadings');\n            if (deviceReadings) {\n                const readings = JSON.parse(deviceReadings);\n                const simDate = new Date(readings.simclock);\n                setTime(simDate);\n            }\n        }, RefreshRate);\n        return () => clearInterval(interval);\n    }, []);\n\n    return (\n        <div id=\"dashContainer\">\n            <TimeDisplay date={time}/>\n\n            <ParticleConnect/>\n\n            <Box component=\"main\" id=\"dashboardBox\" sx={{ flexGrow: 1, py: 8 }}>\n                <Container maxWidth={false}>\n                    <Grid container spacing={3}>\n                        <Grid item xl={4} lg={4} sm={6} xs={12}>\n                            <Door />\n                        </Grid>\n\n                        <Grid item xl={4} lg={4} sm={6} xs={12}>\n                            <Thermostat sx={{ height: '100%' }} />\n                        </Grid>\n\n                        <Grid item xl={4} lg={4} sm={6} xs={12}>\n                            <SmartLight />\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Box>\n        </div>\n    )\n};\n\nDashboard.getLayout = (page) => (\n    <DashboardLayout>\n        {page}\n    </DashboardLayout>\n);\n\nexport default Dashboard;","/**\n * Displays the copyright footer bar\n *\n * @file      Footer.jsx.\n * @author    Martin Lopez, Diego Moscoso, Jacob Summerville.\n * @since     11/29/2021\n * @copyright Martin Lopez, Diego Moscoso, Jacob Summerville 2021\n */\n\nimport React from 'react';\nimport Card from 'react-bootstrap/Card'\n\nimport \"./../../styles/theme.css\";\n\nconst Footer = () => {\n    return (\n        <div className='footerDiv'>\n            <Card.Footer>\n                <small className=\"text-muted\">Copyright &copy; 2021</small>\n            </Card.Footer>    \n        </div> \n    )\n}\n\nexport default Footer;\n","export default __webpack_public_path__ + \"static/media/PageNotFound.a6ff114e.png\";","/**\n * Display the 404 error page\n *\n * @file      PageNotFound.jsx.\n * @author    Martin Lopez, Diego Moscoso, Jacob Summerville.\n * @since     11/29/2021\n * @copyright Martin Lopez, Diego Moscoso, Jacob Summerville 2021\n */\n\nimport React from 'react';\n\nimport PageNotFound from './../img/PageNotFound.png';\n\nimport \"./../styles/theme.css\";\n\nconst NotFoundPage = () => {\n    return (\n        <div className=\"pageNotFoundDiv\">\n          <img className=\"pageNotFoundImg\" src={PageNotFound} \n                alt=\"Page not found\"/>\n        </div>\n    )\n}\n\nexport default NotFoundPage;","/**\n * This file controls page redirection for the entire app\n *\n * @file      App.jsx.\n * @author    Martin Lopez, Diego Moscoso, Jacob Summerville.\n * @since     11/29/2021\n * @copyright Martin Lopez, Diego Moscoso, Jacob Summerville 2021\n */\n\nimport React from 'react';\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {Routes, Route} from 'react-router-dom';\n\nimport Dashboard    from './pages/Dashboard.jsx';\nimport Footer       from './components/common/Footer.jsx';\nimport PageNotFound from './pages/PageNotFound.jsx';\n\nimport './styles/theme.css'\n\nconst App = () => {\n    return (\n        <div className=\"mainDiv\">\n            <Router>\n                <Routes>\n                    <Route path=\"/\"         element={<Dashboard/>}/>\n                    <Route path=\"dashboard\" element={<Dashboard/>}/>\n                    <Route path=\"*\"         element={<PageNotFound/>}/>\n                </Routes>\n            <Footer />\n            </Router>\n        </div>\n    );\n}\n\nexport default App;","/**\n * This file is the entry point to the Homi smart home app.\n *\n * @file      index.js.\n * @author    Martin Lopez, Diego Moscoso, Jacob Summerville.\n * @since     11/29/2021\n * @copyright Martin Lopez, Diego Moscoso, Jacob Summerville 2021\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App.jsx';\n\nimport './styles/theme.css'\n\nconst rootElement = document.getElementById(\"root\");\n\nReactDOM.render(\n        <App />,\n    rootElement\n);\n"],"sourceRoot":""}